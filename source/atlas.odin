// This file is generated by running the atlas_builder.
package game

/*
Note: This file assumes the existence of a type Rect that defines a rectangle in the same package, it can defined as:

	Rect :: rl.Rectangle

or if you don't use raylib:

	Rect :: struct {
		x, y, width, height: f32,
	}

or if you want to use integers (or any other numeric type):

	Rect :: struct {
		x, y, width, height: int,
	}

Just make sure you have something along those lines the same package as this file.
*/

TEXTURE_ATLAS_FILENAME :: "assets/atlas.png"
ATLAS_FONT_SIZE :: 32
LETTERS_IN_FONT :: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890?!&.,_:[]-+"

// A generated square in the atlas you can use with rl.SetShapesTexture to make
// raylib shapes such as rl.DrawRectangleRec() use the atlas.
SHAPES_TEXTURE_RECT :: Rect {362, 190, 10, 10}

Texture_Name :: enum {
	None,
	Test0,
	Test1,
	Test2,
	Test3,
	Map0,
	Map1,
	Amanda,
	Ranger_Base,
	Test_Map,
	Tree_1,
	Tree_2,
	Key,
	Campfire,
	Backpack,
	Bear_Mace,
	Splint,
	Tape,
	Phone,
	Rock,
	Parachord,
	Blanket,
}

Atlas_Texture :: struct {
	rect: Rect,
	// These offsets tell you how much space there is between the rect and the edge of the original document.
	// The atlas is tightly packed, so empty pixels are removed. This can be especially apparent in animations where
	// frames can have different offsets due to different amount of empty pixels around the frames.
	// In many cases you need to add {offset_left, offset_top} to your position. But if you are
	// flipping a texture, then you might need offset_bottom or offset_right.
	offset_top: f32,
	offset_right: f32,
	offset_bottom: f32,
	offset_left: f32,
	document_size: [2]f32,
	duration: f32,
}

atlas_textures: [Texture_Name]Atlas_Texture = {
	.None = {},
	.Test0 = { rect = {429, 190, 5, 5}, offset_top = 0, offset_right = 11, offset_bottom = 11, offset_left = 0, document_size = {16, 16}, duration = 0.100},
	.Test1 = { rect = {435, 190, 5, 5}, offset_top = 3, offset_right = 8, offset_bottom = 8, offset_left = 3, document_size = {16, 16}, duration = 0.100},
	.Test2 = { rect = {441, 190, 5, 5}, offset_top = 7, offset_right = 3, offset_bottom = 4, offset_left = 8, document_size = {16, 16}, duration = 0.100},
	.Test3 = { rect = {456, 190, 5, 4}, offset_top = 12, offset_right = 0, offset_bottom = 0, offset_left = 11, document_size = {16, 16}, duration = 0.100},
	.Map0 = { rect = {321, 0, 64, 64}, offset_top = 0, offset_right = 0, offset_bottom = 0, offset_left = 0, document_size = {64, 64}, duration = 0.100},
	.Map1 = { rect = {386, 0, 64, 64}, offset_top = 0, offset_right = 0, offset_bottom = 0, offset_left = 0, document_size = {64, 64}, duration = 0.100},
	.Amanda = { rect = {444, 159, 12, 16}, offset_top = 0, offset_right = 2, offset_bottom = 0, offset_left = 2, document_size = {16, 16}, duration = 0.100},
	.Ranger_Base = { rect = {333, 141, 16, 16}, offset_top = 0, offset_right = 0, offset_bottom = 0, offset_left = 0, document_size = {16, 16}, duration = 0.100},
	.Test_Map = { rect = {0, 0, 320, 320}, offset_top = 0, offset_right = 0, offset_bottom = 0, offset_left = 0, document_size = {320, 320}, duration = 0.100},
	.Tree_1 = { rect = {451, 63, 52, 60}, offset_top = 3, offset_right = 12, offset_bottom = 1, offset_left = 0, document_size = {64, 64}, duration = 0.100},
	.Tree_2 = { rect = {451, 0, 50, 62}, offset_top = 0, offset_right = 14, offset_bottom = 2, offset_left = 0, document_size = {64, 64}, duration = 0.100},
	.Key = { rect = {351, 190, 10, 10}, offset_top = 0, offset_right = 6, offset_bottom = 6, offset_left = 0, document_size = {16, 16}, duration = 0.100},
	.Campfire = { rect = {334, 190, 16, 10}, offset_top = 6, offset_right = 0, offset_bottom = 0, offset_left = 0, document_size = {16, 16}, duration = 0.100},
	.Backpack = { rect = {423, 174, 5, 15}, offset_top = 1, offset_right = 6, offset_bottom = 0, offset_left = 5, document_size = {16, 16}, duration = 0.100},
	.Bear_Mace = { rect = {405, 189, 4, 10}, offset_top = 0, offset_right = 12, offset_bottom = 6, offset_left = 0, document_size = {16, 16}, duration = 0.100},
	.Splint = { rect = {507, 142, 4, 16}, offset_top = 0, offset_right = 12, offset_bottom = 0, offset_left = 0, document_size = {16, 16}, duration = 0.100},
	.Tape = { rect = {384, 190, 7, 7}, offset_top = 0, offset_right = 9, offset_bottom = 9, offset_left = 0, document_size = {16, 16}, duration = 0.100},
	.Phone = { rect = {502, 159, 4, 16}, offset_top = 0, offset_right = 12, offset_bottom = 0, offset_left = 0, document_size = {16, 16}, duration = 0.100},
	.Rock = { rect = {373, 190, 10, 9}, offset_top = 0, offset_right = 6, offset_bottom = 7, offset_left = 0, document_size = {16, 16}, duration = 0.100},
	.Parachord = { rect = {453, 176, 11, 13}, offset_top = 2, offset_right = 3, offset_bottom = 1, offset_left = 2, document_size = {16, 16}, duration = 0.100},
	.Blanket = { rect = {321, 175, 12, 15}, offset_top = 0, offset_right = 4, offset_bottom = 1, offset_left = 0, document_size = {16, 16}, duration = 0.100},
}

Animation_Name :: enum {
	None,
	Test,
	Map,
}

Tag_Loop_Dir :: enum {
	Forward,
	Reverse,
	Ping_Pong,
	Ping_Pong_Reverse,
}

// Any aseprite file with frames will create new animations. Also, any tags
// within the aseprite file will make that that into a separate animation.
Atlas_Animation :: struct {
	first_frame: Texture_Name,
	last_frame: Texture_Name,
	document_size: [2]f32,
	loop_direction: Tag_Loop_Dir,
	repeat: u16,
}

atlas_animations := [Animation_Name]Atlas_Animation {
	.None = {},
	.Test = { first_frame = .Test0, last_frame = .Test3, loop_direction = .Forward, repeat = 0, document_size = {16, 16} },
	.Map = { first_frame = .Map0, last_frame = .Map1, loop_direction = .Forward, repeat = 0, document_size = {64, 64} },
}

// The rect inside the atlas where each tile has ended up.
// Index using tileset_gameset[x][y].
tileset_gameset := [7][3]Rect {
	0 = {
		 0 = {351, 66, 16, 16},
		 1 = {370, 66, 16, 16},
	},
	1 = {
		 0 = {389, 66, 16, 16},
		 1 = {408, 66, 16, 16},
	},
	2 = {
		 0 = {427, 66, 16, 16},
		 1 = {351, 85, 16, 16},
	},
	3 = {
		 0 = {370, 85, 16, 16},
		 1 = {389, 85, 16, 16},
	},
	4 = {
		 1 = {408, 85, 16, 16},
	},
	5 = {
		 0 = {427, 85, 16, 16},
		 1 = {322, 88, 16, 16},
		 2 = {341, 104, 16, 16},
	},
	6 = {
		 1 = {360, 104, 16, 16},
	},
}

Atlas_Glyph :: struct {
	rect: Rect,
	value: rune,
	offset_x: int,
	offset_y: int,
	advance_x: int,
}

atlas_glyphs: []Atlas_Glyph = {
	{ rect = {351, 142, 13, 15}, value = 'A', offset_x = 0, offset_y = 8, advance_x = 12},
	{ rect = {495, 143, 11, 15}, value = 'B', offset_x = 2, offset_y = 8, advance_x = 13},
	{ rect = {410, 104, 12, 17}, value = 'C', offset_x = 1, offset_y = 7, advance_x = 12},
	{ rect = {419, 158, 11, 15}, value = 'D', offset_x = 2, offset_y = 8, advance_x = 13},
	{ rect = {470, 160, 9, 15}, value = 'E', offset_x = 2, offset_y = 8, advance_x = 11},
	{ rect = {481, 160, 9, 15}, value = 'F', offset_x = 2, offset_y = 8, advance_x = 11},
	{ rect = {424, 104, 12, 17}, value = 'G', offset_x = 1, offset_y = 7, advance_x = 13},
	{ rect = {322, 159, 11, 15}, value = 'H', offset_x = 2, offset_y = 8, advance_x = 14},
	{ rect = {508, 160, 2, 15}, value = 'I', offset_x = 2, offset_y = 8, advance_x = 5},
	{ rect = {393, 141, 9, 16}, value = 'J', offset_x = 0, offset_y = 8, advance_x = 10},
	{ rect = {335, 159, 11, 15}, value = 'K', offset_x = 2, offset_y = 8, advance_x = 13},
	{ rect = {492, 160, 9, 15}, value = 'L', offset_x = 2, offset_y = 8, advance_x = 10},
	{ rect = {366, 142, 13, 15}, value = 'M', offset_x = 2, offset_y = 8, advance_x = 16},
	{ rect = {348, 159, 11, 15}, value = 'N', offset_x = 2, offset_y = 8, advance_x = 14},
	{ rect = {395, 104, 13, 17}, value = 'O', offset_x = 1, offset_y = 7, advance_x = 14},
	{ rect = {458, 160, 10, 15}, value = 'P', offset_x = 2, offset_y = 8, advance_x = 12},
	{ rect = {322, 66, 14, 20}, value = 'Q', offset_x = 1, offset_y = 7, advance_x = 14},
	{ rect = {361, 159, 11, 15}, value = 'R', offset_x = 2, offset_y = 8, advance_x = 12},
	{ rect = {438, 104, 12, 17}, value = 'S', offset_x = 0, offset_y = 7, advance_x = 12},
	{ rect = {439, 143, 12, 15}, value = 'T', offset_x = 0, offset_y = 8, advance_x = 12},
	{ rect = {393, 123, 12, 16}, value = 'U', offset_x = 1, offset_y = 8, advance_x = 14},
	{ rect = {453, 143, 12, 15}, value = 'V', offset_x = 0, offset_y = 8, advance_x = 11},
	{ rect = {419, 141, 18, 15}, value = 'W', offset_x = 0, offset_y = 8, advance_x = 17},
	{ rect = {467, 143, 12, 15}, value = 'X', offset_x = 0, offset_y = 8, advance_x = 11},
	{ rect = {481, 143, 12, 15}, value = 'Y', offset_x = -1, offset_y = 8, advance_x = 10},
	{ rect = {374, 159, 11, 15}, value = 'Z', offset_x = 1, offset_y = 8, advance_x = 12},
	{ rect = {360, 176, 9, 13}, value = 'a', offset_x = 1, offset_y = 11, advance_x = 11},
	{ rect = {322, 107, 11, 17}, value = 'b', offset_x = 1, offset_y = 7, advance_x = 12},
	{ rect = {371, 176, 9, 13}, value = 'c', offset_x = 1, offset_y = 11, advance_x = 10},
	{ rect = {348, 123, 10, 17}, value = 'd', offset_x = 1, offset_y = 7, advance_x = 12},
	{ rect = {348, 176, 10, 13}, value = 'e', offset_x = 1, offset_y = 11, advance_x = 11},
	{ rect = {383, 123, 8, 17}, value = 'f', offset_x = 0, offset_y = 6, advance_x = 6},
	{ rect = {338, 66, 11, 18}, value = 'g', offset_x = 1, offset_y = 11, advance_x = 11},
	{ rect = {485, 125, 10, 16}, value = 'h', offset_x = 1, offset_y = 7, advance_x = 12},
	{ rect = {414, 141, 3, 16}, value = 'i', offset_x = 1, offset_y = 7, advance_x = 5},
	{ rect = {505, 1, 5, 21}, value = 'j', offset_x = -1, offset_y = 7, advance_x = 5},
	{ rect = {497, 125, 10, 16}, value = 'k', offset_x = 1, offset_y = 7, advance_x = 11},
	{ rect = {505, 68, 4, 17}, value = 'l', offset_x = 1, offset_y = 7, advance_x = 5},
	{ rect = {393, 176, 16, 12}, value = 'm', offset_x = 1, offset_y = 11, advance_x = 18},
	{ rect = {430, 177, 10, 12}, value = 'n', offset_x = 1, offset_y = 11, advance_x = 12},
	{ rect = {335, 176, 11, 13}, value = 'o', offset_x = 1, offset_y = 11, advance_x = 12},
	{ rect = {335, 123, 11, 17}, value = 'p', offset_x = 1, offset_y = 11, advance_x = 12},
	{ rect = {360, 123, 10, 17}, value = 'q', offset_x = 1, offset_y = 11, advance_x = 12},
	{ rect = {466, 177, 7, 12}, value = 'r', offset_x = 1, offset_y = 11, advance_x = 7},
	{ rect = {382, 176, 9, 13}, value = 's', offset_x = 0, offset_y = 11, advance_x = 9},
	{ rect = {404, 141, 8, 16}, value = 't', offset_x = 0, offset_y = 8, advance_x = 7},
	{ rect = {442, 177, 10, 12}, value = 'u', offset_x = 1, offset_y = 12, advance_x = 12},
	{ rect = {499, 177, 11, 11}, value = 'v', offset_x = 0, offset_y = 12, advance_x = 10},
	{ rect = {481, 177, 16, 11}, value = 'w', offset_x = 0, offset_y = 12, advance_x = 16},
	{ rect = {481, 190, 10, 11}, value = 'x', offset_x = 0, offset_y = 12, advance_x = 10},
	{ rect = {407, 123, 11, 16}, value = 'y', offset_x = 0, offset_y = 12, advance_x = 10},
	{ rect = {493, 190, 9, 11}, value = 'z', offset_x = 0, offset_y = 12, advance_x = 9},
	{ rect = {413, 175, 9, 15}, value = '1', offset_x = 1, offset_y = 8, advance_x = 11},
	{ rect = {387, 159, 11, 15}, value = '2', offset_x = 0, offset_y = 8, advance_x = 11},
	{ rect = {420, 123, 11, 16}, value = '3', offset_x = 0, offset_y = 8, advance_x = 11},
	{ rect = {400, 159, 11, 15}, value = '4', offset_x = 0, offset_y = 8, advance_x = 11},
	{ rect = {433, 123, 11, 16}, value = '5', offset_x = 0, offset_y = 8, advance_x = 11},
	{ rect = {322, 126, 10, 16}, value = '6', offset_x = 1, offset_y = 8, advance_x = 11},
	{ rect = {432, 160, 11, 15}, value = '7', offset_x = 0, offset_y = 8, advance_x = 11},
	{ rect = {446, 125, 11, 16}, value = '8', offset_x = 0, offset_y = 8, advance_x = 11},
	{ rect = {459, 125, 11, 16}, value = '9', offset_x = 0, offset_y = 8, advance_x = 11},
	{ rect = {472, 125, 11, 16}, value = '0', offset_x = 0, offset_y = 8, advance_x = 11},
	{ rect = {372, 123, 9, 17}, value = '?', offset_x = 0, offset_y = 7, advance_x = 9},
	{ rect = {505, 87, 4, 17}, value = '!', offset_x = 1, offset_y = 7, advance_x = 6},
	{ rect = {379, 104, 14, 17}, value = '&', offset_x = 0, offset_y = 7, advance_x = 13},
	{ rect = {424, 191, 4, 4}, value = '.', offset_x = 1, offset_y = 20, advance_x = 5},
	{ rect = {504, 190, 4, 7}, value = ',', offset_x = 1, offset_y = 20, advance_x = 5},
	{ rect = {463, 191, 11, 2}, value = '_', offset_x = 0, offset_y = 24, advance_x = 11},
	{ rect = {475, 177, 4, 12}, value = ':', offset_x = 1, offset_y = 12, advance_x = 5},
	{ rect = {505, 24, 5, 20}, value = '[', offset_x = 2, offset_y = 7, advance_x = 6},
	{ rect = {505, 46, 5, 20}, value = ']', offset_x = 0, offset_y = 7, advance_x = 6},
	{ rect = {448, 191, 7, 3}, value = '-', offset_x = 0, offset_y = 16, advance_x = 6},
	{ rect = {393, 190, 11, 11}, value = '+', offset_x = 0, offset_y = 10, advance_x = 11},
}
