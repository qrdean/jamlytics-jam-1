// This file is generated by running the atlas_builder.
package game

/*
Note: This file assumes the existence of a type Rect that defines a rectangle in the same package, it can defined as:

	Rect :: rl.Rectangle

or if you don't use raylib:

	Rect :: struct {
		x, y, width, height: f32,
	}

or if you want to use integers (or any other numeric type):

	Rect :: struct {
		x, y, width, height: int,
	}

Just make sure you have something along those lines the same package as this file.
*/

TEXTURE_ATLAS_FILENAME :: "assets/atlas.png"
ATLAS_FONT_SIZE :: 32
LETTERS_IN_FONT :: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890?!&.,_:[]-+"

// A generated square in the atlas you can use with rl.SetShapesTexture to make
// raylib shapes such as rl.DrawRectangleRec() use the atlas.
SHAPES_TEXTURE_RECT :: Rect {345, 35, 10, 10}

Texture_Name :: enum {
	None,
	Test0,
	Test1,
	Test2,
	Test3,
	Map0,
	Map1,
	Amanda,
}

Atlas_Texture :: struct {
	rect: Rect,
	// These offsets tell you how much space there is between the rect and the edge of the original document.
	// The atlas is tightly packed, so empty pixels are removed. This can be especially apparent in animations where
	// frames can have different offsets due to different amount of empty pixels around the frames.
	// In many cases you need to add {offset_left, offset_top} to your position. But if you are
	// flipping a texture, then you might need offset_bottom or offset_right.
	offset_top: f32,
	offset_right: f32,
	offset_bottom: f32,
	offset_left: f32,
	document_size: [2]f32,
	duration: f32,
}

atlas_textures: [Texture_Name]Atlas_Texture = {
	.None = {},
	.Test0 = { rect = {368, 35, 5, 5}, offset_top = 0, offset_right = 11, offset_bottom = 11, offset_left = 0, document_size = {16, 16}, duration = 0.100},
	.Test1 = { rect = {374, 35, 5, 5}, offset_top = 3, offset_right = 8, offset_bottom = 8, offset_left = 3, document_size = {16, 16}, duration = 0.100},
	.Test2 = { rect = {380, 35, 5, 5}, offset_top = 7, offset_right = 3, offset_bottom = 4, offset_left = 8, document_size = {16, 16}, duration = 0.100},
	.Test3 = { rect = {395, 35, 5, 4}, offset_top = 12, offset_right = 0, offset_bottom = 0, offset_left = 11, document_size = {16, 16}, duration = 0.100},
	.Map0 = { rect = {0, 0, 64, 64}, offset_top = 0, offset_right = 0, offset_bottom = 0, offset_left = 0, document_size = {64, 64}, duration = 0.100},
	.Map1 = { rect = {65, 0, 64, 64}, offset_top = 0, offset_right = 0, offset_bottom = 0, offset_left = 0, document_size = {64, 64}, duration = 0.100},
	.Amanda = { rect = {338, 35, 6, 12}, offset_top = 3, offset_right = 5, offset_bottom = 1, offset_left = 5, document_size = {16, 16}, duration = 0.100},
}

Animation_Name :: enum {
	None,
	Test,
	Map,
}

Tag_Loop_Dir :: enum {
	Forward,
	Reverse,
	Ping_Pong,
	Ping_Pong_Reverse,
}

// Any aseprite file with frames will create new animations. Also, any tags
// within the aseprite file will make that that into a separate animation.
Atlas_Animation :: struct {
	first_frame: Texture_Name,
	last_frame: Texture_Name,
	document_size: [2]f32,
	loop_direction: Tag_Loop_Dir,
	repeat: u16,
}

atlas_animations := [Animation_Name]Atlas_Animation {
	.None = {},
	.Test = { first_frame = .Test0, last_frame = .Test3, loop_direction = .Forward, repeat = 0, document_size = {16, 16} },
	.Map = { first_frame = .Map0, last_frame = .Map1, loop_direction = .Forward, repeat = 0, document_size = {64, 64} },
}

Atlas_Glyph :: struct {
	rect: Rect,
	value: rune,
	offset_x: int,
	offset_y: int,
	advance_x: int,
}

atlas_glyphs: []Atlas_Glyph = {
	{ rect = {491, 18, 13, 15}, value = 'A', offset_x = 0, offset_y = 8, advance_x = 12},
	{ rect = {408, 19, 11, 15}, value = 'B', offset_x = 2, offset_y = 8, advance_x = 13},
	{ rect = {212, 1, 12, 17}, value = 'C', offset_x = 1, offset_y = 7, advance_x = 12},
	{ rect = {421, 19, 11, 15}, value = 'D', offset_x = 2, offset_y = 8, advance_x = 13},
	{ rect = {245, 20, 9, 15}, value = 'E', offset_x = 2, offset_y = 8, advance_x = 11},
	{ rect = {256, 20, 9, 15}, value = 'F', offset_x = 2, offset_y = 8, advance_x = 11},
	{ rect = {226, 1, 12, 17}, value = 'G', offset_x = 1, offset_y = 7, advance_x = 13},
	{ rect = {434, 19, 11, 15}, value = 'H', offset_x = 2, offset_y = 8, advance_x = 14},
	{ rect = {506, 18, 2, 15}, value = 'I', offset_x = 2, offset_y = 8, advance_x = 5},
	{ rect = {465, 1, 9, 16}, value = 'J', offset_x = 0, offset_y = 8, advance_x = 10},
	{ rect = {447, 19, 11, 15}, value = 'K', offset_x = 2, offset_y = 8, advance_x = 13},
	{ rect = {267, 20, 9, 15}, value = 'L', offset_x = 2, offset_y = 8, advance_x = 10},
	{ rect = {337, 19, 13, 15}, value = 'M', offset_x = 2, offset_y = 8, advance_x = 16},
	{ rect = {460, 19, 11, 15}, value = 'N', offset_x = 2, offset_y = 8, advance_x = 14},
	{ rect = {197, 1, 13, 17}, value = 'O', offset_x = 1, offset_y = 7, advance_x = 14},
	{ rect = {233, 20, 10, 15}, value = 'P', offset_x = 2, offset_y = 8, advance_x = 12},
	{ rect = {138, 1, 14, 20}, value = 'Q', offset_x = 1, offset_y = 7, advance_x = 14},
	{ rect = {473, 19, 11, 15}, value = 'R', offset_x = 2, offset_y = 8, advance_x = 12},
	{ rect = {240, 1, 12, 17}, value = 'S', offset_x = 0, offset_y = 7, advance_x = 12},
	{ rect = {352, 19, 12, 15}, value = 'T', offset_x = 0, offset_y = 8, advance_x = 12},
	{ rect = {337, 1, 12, 16}, value = 'U', offset_x = 1, offset_y = 8, advance_x = 14},
	{ rect = {366, 19, 12, 15}, value = 'V', offset_x = 0, offset_y = 8, advance_x = 11},
	{ rect = {491, 1, 18, 15}, value = 'W', offset_x = 0, offset_y = 8, advance_x = 17},
	{ rect = {380, 19, 12, 15}, value = 'X', offset_x = 0, offset_y = 8, advance_x = 11},
	{ rect = {394, 19, 12, 15}, value = 'Y', offset_x = -1, offset_y = 8, advance_x = 10},
	{ rect = {181, 20, 11, 15}, value = 'Z', offset_x = 1, offset_y = 8, advance_x = 12},
	{ rect = {314, 20, 9, 13}, value = 'a', offset_x = 1, offset_y = 11, advance_x = 11},
	{ rect = {254, 1, 11, 17}, value = 'b', offset_x = 1, offset_y = 7, advance_x = 12},
	{ rect = {325, 20, 9, 13}, value = 'c', offset_x = 1, offset_y = 11, advance_x = 10},
	{ rect = {280, 1, 10, 17}, value = 'd', offset_x = 1, offset_y = 7, advance_x = 12},
	{ rect = {302, 20, 10, 13}, value = 'e', offset_x = 1, offset_y = 11, advance_x = 11},
	{ rect = {315, 1, 8, 17}, value = 'f', offset_x = 0, offset_y = 6, advance_x = 6},
	{ rect = {168, 1, 11, 18}, value = 'g', offset_x = 1, offset_y = 11, advance_x = 11},
	{ rect = {429, 1, 10, 16}, value = 'h', offset_x = 1, offset_y = 7, advance_x = 12},
	{ rect = {486, 1, 3, 16}, value = 'i', offset_x = 1, offset_y = 7, advance_x = 5},
	{ rect = {131, 1, 5, 21}, value = 'j', offset_x = -1, offset_y = 7, advance_x = 5},
	{ rect = {441, 1, 10, 16}, value = 'k', offset_x = 1, offset_y = 7, advance_x = 11},
	{ rect = {325, 1, 4, 17}, value = 'l', offset_x = 1, offset_y = 7, advance_x = 5},
	{ rect = {138, 23, 16, 12}, value = 'm', offset_x = 1, offset_y = 11, advance_x = 18},
	{ rect = {156, 23, 10, 12}, value = 'n', offset_x = 1, offset_y = 11, advance_x = 12},
	{ rect = {289, 20, 11, 13}, value = 'o', offset_x = 1, offset_y = 11, advance_x = 12},
	{ rect = {267, 1, 11, 17}, value = 'p', offset_x = 1, offset_y = 11, advance_x = 12},
	{ rect = {292, 1, 10, 17}, value = 'q', offset_x = 1, offset_y = 11, advance_x = 12},
	{ rect = {301, 35, 7, 12}, value = 'r', offset_x = 1, offset_y = 11, advance_x = 7},
	{ rect = {168, 21, 9, 13}, value = 's', offset_x = 0, offset_y = 11, advance_x = 9},
	{ rect = {476, 1, 8, 16}, value = 't', offset_x = 0, offset_y = 8, advance_x = 7},
	{ rect = {289, 35, 10, 12}, value = 'u', offset_x = 1, offset_y = 12, advance_x = 12},
	{ rect = {486, 35, 11, 11}, value = 'v', offset_x = 0, offset_y = 12, advance_x = 10},
	{ rect = {310, 35, 16, 11}, value = 'w', offset_x = 0, offset_y = 12, advance_x = 16},
	{ rect = {168, 36, 10, 11}, value = 'x', offset_x = 0, offset_y = 12, advance_x = 10},
	{ rect = {351, 1, 11, 16}, value = 'y', offset_x = 0, offset_y = 12, advance_x = 10},
	{ rect = {328, 36, 9, 11}, value = 'z', offset_x = 0, offset_y = 12, advance_x = 9},
	{ rect = {278, 20, 9, 15}, value = '1', offset_x = 1, offset_y = 8, advance_x = 11},
	{ rect = {194, 20, 11, 15}, value = '2', offset_x = 0, offset_y = 8, advance_x = 11},
	{ rect = {364, 1, 11, 16}, value = '3', offset_x = 0, offset_y = 8, advance_x = 11},
	{ rect = {207, 20, 11, 15}, value = '4', offset_x = 0, offset_y = 8, advance_x = 11},
	{ rect = {377, 1, 11, 16}, value = '5', offset_x = 0, offset_y = 8, advance_x = 11},
	{ rect = {453, 1, 10, 16}, value = '6', offset_x = 1, offset_y = 8, advance_x = 11},
	{ rect = {220, 20, 11, 15}, value = '7', offset_x = 0, offset_y = 8, advance_x = 11},
	{ rect = {390, 1, 11, 16}, value = '8', offset_x = 0, offset_y = 8, advance_x = 11},
	{ rect = {403, 1, 11, 16}, value = '9', offset_x = 0, offset_y = 8, advance_x = 11},
	{ rect = {416, 1, 11, 16}, value = '0', offset_x = 0, offset_y = 8, advance_x = 11},
	{ rect = {304, 1, 9, 17}, value = '?', offset_x = 0, offset_y = 7, advance_x = 9},
	{ rect = {331, 1, 4, 17}, value = '!', offset_x = 1, offset_y = 7, advance_x = 6},
	{ rect = {181, 1, 14, 17}, value = '&', offset_x = 0, offset_y = 7, advance_x = 13},
	{ rect = {363, 36, 4, 4}, value = '.', offset_x = 1, offset_y = 20, advance_x = 5},
	{ rect = {357, 36, 4, 7}, value = ',', offset_x = 1, offset_y = 20, advance_x = 5},
	{ rect = {402, 36, 11, 2}, value = '_', offset_x = 0, offset_y = 24, advance_x = 11},
	{ rect = {131, 24, 4, 12}, value = ':', offset_x = 1, offset_y = 12, advance_x = 5},
	{ rect = {154, 1, 5, 20}, value = '[', offset_x = 2, offset_y = 7, advance_x = 6},
	{ rect = {161, 1, 5, 20}, value = ']', offset_x = 0, offset_y = 7, advance_x = 6},
	{ rect = {387, 36, 7, 3}, value = '-', offset_x = 0, offset_y = 16, advance_x = 6},
	{ rect = {499, 35, 11, 11}, value = '+', offset_x = 0, offset_y = 10, advance_x = 11},
}
